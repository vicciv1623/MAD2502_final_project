*Benfords law takes into account the first n digits significant digits, so if you have a number 0.00302, 
the first digit that would count would be 3, the first two digits that would count would be 30, and so on.

*benfords law is most commoly used with base 10, but teh law works for any base system higher than binary 

*applies to but not limited to, electribity bills, street addresses, stock prices, death rates, math and physical 
constants. benfords law can detect anomalies in accounting fraud, election results, public health datasets,
research datasets (e.g. biology), images (pixel intensity distributions), and more

*personally digital forensics, which is the one that tests for pixel distributions sounds like a really 
cool application

*examples: heights of hte 58 tallest structures follow benfords law, leading digit of 2^n also follow the law

*resources: https://github.com/carloscinelli/benford.analysis/tree/master (basically repo package to R package called 
benford.analysis) we can take reference to some of the cool features they implement 

*for analyzing pixels on image, we could use OpenCV or Pillow which are offered by python 
(i acutally did not knwo that for OpenCV but cool)





*IDEAS for FEATURE IMPLEMENTATION
Image analysis
    histogram overlay comparison
    function that returns new image with its pixels color coded for its sigfigs
        if image has been tampered then we know WHERE it could have been messed with
    statistical analysis
        how much can you deviate from the expected results 
        output into a table
            pandas, matplotlib, pyplot
        chi-square, cho-gaines d statistic
    fix up function where if you can edit the pixels so that the image doesnt look as tampered
        promoting fraud
        applies to pictures with filters and AI generated images
        before and after comparisons
        pixel modiciations are possible with pillow
    other twists
        sum of first n digits
Text analysis
    use PyPDF library to parse through pdf 

